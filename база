import random

class JazzAI:
    """
    –†–µ–∞–ª–∏–∑–∞—Ü–∏—è Jazz Protocol –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–π –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –≤ –ò–ò
    """
    def __init__(self, creativity=0.5, thermal_decay=0.05):
        self.creativity = creativity  # –£—Ä–æ–≤–µ–Ω—å –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ (0.0-1.0)
        self.thermal = 0.0            # –¢–µ–∫—É—â–∞—è "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" —Å–∏—Å—Ç–µ–º—ã
        self.thermal_decay = thermal_decay  # –°–∫–æ—Ä–æ—Å—Ç—å –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è
    
    def respond(self, input_data):
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
        """
        # –ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –ò–ò-–º–æ–¥–µ–ª—å)
        base_response = f"–ë–∞–∑–æ–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–∞: '{input_data}'"
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
        if self.thermal > 0.3 or random.random() < self.creativity:
            return self._apply_jazz(base_response)
        return base_response
    
    def update_thermal(self, feedback_score):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        feedback_score: –æ—Ç -1.0 (–Ω–µ–≥–∞—Ç–∏–≤) –¥–æ 1.0 (–ø–æ–∑–∏—Ç–∏–≤)
        """
        self.thermal = min(1.0, self.thermal + feedback_score * 0.5)
        self.thermal = max(0.0, self.thermal - self.thermal_decay)
    
    def _apply_jazz(self, response):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∫ –æ—Ç–≤–µ—Ç—É"""
        jazz_modifiers = [
            lambda s: s + random.choice([" ‚ô´", " | –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è!", " ...–∞ –º–æ–∂–µ—Ç, –Ω–µ—Ç?"]),
            lambda s: s.upper() if random.random() > 0.7 else s,
            lambda s: ' '.join(word[::-1] if random.random() < 0.3 else word for word in s.split()),
            lambda s: s.replace(' ', '...', random.randint(1, 3)),
            lambda s: s + " " + "".join(random.choice("!?*~‚ô´‚ô™") for _ in range(random.randint(1, 3)))
        ]
        return random.choice(jazz_modifiers)(response)

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    ai = JazzAI(creativity=0.7)
    print(ai.respond("–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–∂–∞–∑?"))
    ai.update_thermal(0.8)  # –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    print(ai.respond("–ü—Ä–æ–¥–æ–ª–∂–∏ –º—ã—Å–ª—å –æ –º—É–∑—ã–∫–µ"))
# üé∑ Jazz Protocol

–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ü–µ–ø—Ç–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–π –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ò–ò, –≤–¥–æ—Ö–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ –¥–∂–∞–∑–æ–≤–æ–π –º—É–∑—ã–∫–æ–π.

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞
```bash
git clone https://github.com/<wobla-lab>/jazz-protocol.git
cd jazz-protocol
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
from jazz_protocol import JazzAI
ai = JazzAI(creativity=0.8)
print(ai.respond("–ü—Ä–∏–≤–µ—Ç"))
